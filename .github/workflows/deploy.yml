name: Deploy to ECS and Vercel

on:
  push:
    branches:
      - main  # Change to your deployment branch if necessary

jobs:
  deploy-to-ecs:
    name: Deploy Backend to ECS
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: "850995574179"  # Replace with your actual AWS Account ID

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Backend JAR
        run: |
          cd backend
          chmod +x ./mvnw
          ./mvnw clean package -DskipTests

      - name: Ensure ECR Repository Exists
        run: |
          aws ecr describe-repositories --repository-names my-backend --region ${{ secrets.AWS_REGION }} || \
          aws ecr create-repository --repository-name my-backend --region ${{ secrets.AWS_REGION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build, Tag, and Push Docker Image
        run: |
          docker build -t my-backend ./backend
          docker tag my-backend:latest 850995574179.dkr.ecr.ap-southeast-1.amazonaws.com/my-backend:latest
          docker push 850995574179.dkr.ecr.ap-southeast-1.amazonaws.com/my-backend:latest

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-def.json
          service: my-backend-service
          cluster: my-backend-cluster
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}

  deploy-to-vercel:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: deploy-to-ecs

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          cd ./frontend
          vercel --prod --token $VERCEL_TOKEN
